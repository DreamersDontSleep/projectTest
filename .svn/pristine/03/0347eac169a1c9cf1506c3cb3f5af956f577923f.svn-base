<template>
	<div>
		<div class="search-header">
			<el-form :inline="true" :model="searchForm" class="demo-form-inline">
				<el-form-item label="国家：">
					<el-select v-model="searchForm.country" placeholder="请选择国家">
						<el-option v-for="item in countryList" :key="item" :label="item" :value="item"></el-option>
					</el-select>
				</el-form-item>
				<el-form-item>
					<el-button @click="search">查询</el-button>
				</el-form-item>
			</el-form>
		</div>
		<el-scrollbar :native="false" :noresize="false">
			<div class="carousel">
				<div class="content">
					<div class="chart">
						<div class="title">意识统计</div>
						<ve-ring
							height="calc(100% - 24px)"
							:judge-width="true"
							:resizeable="true"
							:colors="colors"
							:extend="extend"
							:settings="trendChartSettings"
							:data="culturalData"
						></ve-ring>
					</div>
					<el-divider direction="vertical"></el-divider>
					<div class="info">
						<div class="info-title">统计信息</div>
						<div class="info-legend">
							<div v-for="(color, name) in colorMatch" :key="color">
								<span :style="{ 'background-color': color }" class="legend"></span>
								<span>{{ name }}</span>
							</div>
						</div>
						<el-scrollbar :native="false" :noresize="false">
							<ul>
								<li
									v-for="(item, index) in culturalEssay"
									:key="item.uuid"
									@click="showEssay(item, '意识形态')"
								>
									<el-tooltip
										v-if="item.country.length > 4"
										class="title"
										effect="dark"
										:content="item.country"
										placement="left"
									>
										<span class="title" :style="{ 'background-color':  colorMatch[item.type] }">{{
											item.country
										}}</span>
									</el-tooltip>
									<span v-else class="title" :style="{ 'background-color':  colorMatch[item.type] }">{{
										item.country
									}}</span>
									<span>{{ item.time + "&nbsp" + item.content }}</span>
								</li>
							</ul>
						</el-scrollbar>
					</div>
				</div>
			</div>
		</el-scrollbar>
		<!--        文章显示-->
		<el-dialog title="点击空白处关闭" :visible.sync="dialogVisible" width="60%">
			<span>{{ dialogText }}</span>
		</el-dialog>
	</div>
</template>

<script>
import { colors } from "config/base.js";
	import { sliceShow, concatBy } from "utils/common.js";
	import mixin from "components/mixins";
	import { getCountryList } from "api/common.js";
	import { getCulture ,getStatics} from "api/polls.js";

	export default {
		name: "Cultural",
		mixins: [mixin],
		data() {
			this.colorMatch = {
				传统文化: colors[0],
				民俗文化: colors[1],
				礼仪文化: colors[2],
				饮食文化: colors[3]
			};
			this.extend = {
				series: {
					type: "pie",
					roseType: "radius",
					radius: [0, "60%"],
					avoidLabelOverlap: false,
					//标签
					label: {
						show: true,
						position: "outside",
						formatter: "{b}:{d}%" //模板变量有 {a}、{b}、{c}、{d}，分别表示系列名，数据名，数据值，百分比。{d}数据会根据value值计算百分比
					},
					itemStyle: {
						color: seriesIndex => {
							return this.colorMatch[seriesIndex.name];
						}
					}
				}
			};
			return {
				countryList: [],
				loading: true,
				searchForm: {
					country: ""
				},
				//文章弹窗
				dialogVisible: false,
				dialogText: "",
				culturalData: {
					columns: ["文化", "数量"],
					rows: []
				},
				culturalEssay: []
			};
		},
		created() {
			getCountryList().then(res => {
				this.countryList = res.data;
			});
			this.getData(this.searchForm);
			this.getTypeData();
		},
		computed: {
			colorList() {
				return {
					0: "传统文化",
					1: "民俗文化",
					2: "礼仪文化",
					3: "饮食文化"
				};
			}
		},
		methods: {
			//切换
			switchItem(val) {
				this.activItem = val;
				this.$refs["carousel"].setActiveItem(val);
			},
			//切换
			carouselChange(index) {
				this.activItem = this.items[index];
			},
			//展示文章
			showEssay(text) {
				this.dialogVisible = true;
				this.dialogText = text;
			},
			search() {
				this.getData(this.searchForm);
				this.getTypeData();
			},
			getTypeData() {
				getStatics({ id:2 })
					.then(res => {
						if (this.$check.isNullData(res)) {
							this.culturalData.rows = [
								{
									文化: "暂无数据",
									数量: 0
								}
							];
							return;
						}
						let allData = res.data;
						this.culturalData.rows = [];
						let nationArr = [];
						for (let key in allData) {
							let data = allData[key];
							this.culturalData.columns.push(key);
							nationArr.push({
								文化: key,
								数量: data
							});
						}
						this.culturalData.rows = nationArr;
					})
					.catch(() => {
						this.culturalData.rows = [
							{
								文化: "暂无数据",
								数量: 0
							}
						];
					});
			},
			getData(data) {
				getCulture(data)
					.then(res => {
						if (this.$check.isNullData(res)) {
							this.culturalEssay = [{ country: "无", content: "暂无数据", time: "" }];
							return;
						}
						this.culturalEssay = [];
						res.data.forEach(cur => {
								this.culturalEssay.push({
									country: cur.country ? cur.country : "无",
									content: cur.content ? cur.content : "无",
									time: cur.createTime ? cur.createTime : "无",
									type: cur.type
								});
						});
					})
					.catch(err => {
						this.culturalEssay = [{ country: "无", content: "暂无数据", time: "" }];
					});
			}
		}
	};
</script>

<style scoped lang="scss">
	ul {
		margin: 0;
		padding: 0;
	}
	.carousel {
		height: calc(100% - 0px);
		.content {
			height: calc(100% - 0px);
		}
	}

	.info-title ~ .el-scrollbar[data-v-e8c14a5c] {
		height: calc(100% - 0px);
	}

	/*最外层的滚动*/
	/deep/ .el-scrollbar {
		height: calc(100% - 56px);

		/deep/ .el-scrollbar__view {
			height: calc(100% - 8px);
		}
	}

	.trend-chart {
		height: 80% !important;
	}
	.info .el-scrollbar {
		height: calc(100% - 46px);
	}
</style>
